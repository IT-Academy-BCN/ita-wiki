name: Deploy to VPS

on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - "back/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        cd ${{ github.workspace }}/back
        npm ci

    - name: Build TypeScript
      run: |
        cd ${{ github.workspace }}/back
        npm run build

    - name: Deploy back-end - sync files
      uses: Burnett01/rsync-deployments@5.2.1
      with:
        switches: -avz --delete --exclude=.env --exclude=node_modules
        path: ${{ github.workspace }}/back/
        remote_path: ${{ secrets.BACK_DEV_PWD }}
        remote_host: ${{ secrets.SERVER_HOST }}
        remote_user: ${{ secrets.SERVER_USERNAME }}
        remote_key: ${{ secrets.SERVER_SSH_KEY }}

    - name: Deploy back-end - run commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Enter the deployment directory
          cd ${{ secrets.BACK_DEV_PWD }}

          # Install production dependencies
          npm ci --only=production

          # Run Prisma migrations
          npx prisma migrate deploy

          # Stop the app with PM2
          pm2 stop server-dev || true

          # Start the app with PM2 and the specified flag
          pm2 start --name server-dev --node-args="--experimental-specifier-resolution=node" dist/src/server.js 
