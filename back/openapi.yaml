info:
  version: 1.0.0
  title: IT Academy Wiki
  description: Our app implements a Wiki to be used as a knowledge base by the
    students of the Barcelona Activa's IT Academy
servers:
  - url: v1
openapi: 3.0.0
components:
  headers:
    Set-Cookie:
      schema:
        type: string
        example: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbGdieTNyemYwMDAweG44eDdzeXJvMnc2IiwiaWF0IjoxNjgxMjEyNzAzLCJleHAiOjE2ODEyOTkxMDN9.G1F5XQLYu0uwxnJDx_qDUV3avIUPxHb3Ld-XZYvUfNM;
          path=/; httponly
        description: Sets the JWT session cookie
  schemas:
    DniError:
      type: object
      properties:
        message:
          type: string
          example: DNI already exists
      required:
        - message
    EmailError:
      type: object
      properties:
        message:
          type: string
          example: Email already exists
      required:
        - message
    ValidationError:
      type: array
      items:
        type: object
        properties:
          code:
            type: string
            example: invalid_string
          message:
            type: string
            example: Invalid
          path:
            type: array
            items:
              type: string
              example: dni
          validation:
            type: string
            example: regex
          expected:
            type: string
            example: string
          received:
            type: string
            example: undefined
        required:
          - code
          - message
          - path
      example:
        - validation: regex
          code: invalid_string
          message: Invalid
          path:
            - body
            - dni
        - code: invalid_type
          expected: string
          received: undefined
          path:
            - body
            - password
          message: Required
  parameters: {}
paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth
      description: Takes a DNI and a password and returns a session cookie
      summary: Logs in a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dni:
                  type: string
                password:
                  type: string
                  minLength: 8
              required:
                - dni
                - password
      responses:
        "204":
          description: The user has been authenticated
          headers:
            Set-Cookie:
              $ref: "#/components/headers/Set-Cookie"
        "400":
          description: Zod validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "#/components/schemas/ValidationError"
                required:
                  - message
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
                required:
                  - message
        "422":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid password
                required:
                  - message
  /api/v1/auth/register:
    post:
      tags:
        - auth
      description: Takes a DNI, a password, a name and an email an registers a user to
        the system
      summary: Registers a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                dni:
                  type: string
                specialization:
                  type: string
                password:
                  type: string
                  minLength: 8
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]*$
              required:
                - email
                - dni
                - specialization
                - password
      responses:
        "204":
          description: The user has been registered
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ValidationError"
                  - $ref: "#/components/schemas/DniError"
                  - $ref: "#/components/schemas/EmailError"
        "500":
          description: Other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Database error
                required:
                  - message
  /api/v1/topics/category/:categoryId:
    get:
      tags:
        - topics
      description: Takes a category Id and returns the list of topics sharing that category
      summary: Returns topics by category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: ID of the category for which to retrieve topics
      responses:
        "200":
          description: The server has successfully received the parameter
  /api/v1/topics:
    get:
      tags:
        - topics
      description: Returns a list of all topics
      summary: Returns topics
      responses:
        "200":
          description: The server has successfully received the parameter
