generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  dni       String      @unique @db.VarChar(10)
  password  String
  name      String
  status    USER_STATUS @default(INACTIVE)
  role      USER_ROLE   @default(REGISTERED)
  resources Resource[]
  media     Media[]
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map("user")
}

enum USER_STATUS {
  ACTIVE
  INACTIVE
}

enum USER_ROLE {
  ADMIN
  REGISTERED
}

model Resource {
  id           String              @id @default(cuid())
  title        String
  description  String?
  url          String
  resourceType RESOURCE_TYPE       @map("resource_type")
  topics       TopicsOnResources[]
  user         User                @relation(fields: [userId], references: [id])
  userId       String              @map("user_id")
  createdAt    DateTime            @default(now()) @map("created_at")
  updatedAt    DateTime            @updatedAt @map("updated_at")

  @@map("resource")
}

enum RESOURCE_TYPE {
  BLOG
  VIDEO
  TUTORIAL
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  topics    Topic[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("category")
}

model Topic {
  id         String              @id @default(cuid())
  name       String
  category   Category            @relation(fields: [categoryId], references: [id])
  categoryId String              @map("category_id")
  resources  TopicsOnResources[]
  createdAt  DateTime            @default(now()) @map("created_at")
  updatedAt  DateTime            @updatedAt @map("updated_at")

  @@map("topic")
}

model Media {
  id        String   @id @default(cuid())
  mimeType  String   @map("mime_type")
  filePath  String   @map("file_path")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("media")
}

model TopicsOnResources {
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId String   @map("resource_id")
  topic      Topic    @relation(fields: [topicId], references: [id])
  topicId    String   @map("topic_id")
  createdAt  DateTime @default(now()) @map("created_at")

  @@id([topicId, resourceId])
}
