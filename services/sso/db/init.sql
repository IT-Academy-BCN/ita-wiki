DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role') THEN
        CREATE TYPE USER_ROLE AS ENUM ('ADMIN', 'REGISTERED', 'MENTOR');
    END IF;
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_status') THEN
        CREATE TYPE USER_STATUS AS ENUM ('ACTIVE', 'PENDING', 'BLOCKED');
    END IF;
END
$$;

CREATE OR REPLACE FUNCTION TRIGGER_SET_TIMESTAMP() RETURNS TRIGGER AS $$ BEGIN NEW.updated_at := NOW();
RETURN NEW;
END;
$$LANGUAGE plpgsql;

CREATE TABLE IF NOT EXISTS "user" (
    id TEXT PRIMARY KEY,
    dni VARCHAR(25) UNIQUE NOT NULL,
    email VARCHAR (255) UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    password TEXT NOT NULL,
    role USER_ROLE NOT NULL DEFAULT 'REGISTERED',
    status USER_STATUS NOT NULL DEFAULT 'PENDING',
    user_meta JSONB NOT NULL DEFAULT '{}',
    created_at TIMESTAMPTZ DEFAULT NOW (),
    updated_at TIMESTAMPTZ
);

CREATE TRIGGER set_timestamp BEFORE
UPDATE ON "user" FOR EACH ROW EXECUTE FUNCTION trigger_set_timestamp();

CREATE TABLE IF NOT EXISTS itinerary (
    id TEXT PRIMARY KEY,
    name TEXT UNIQUE NOT NULL,
    slug TEXT UNIQUE NOT NULL
);

ALTER TABLE "user"
ADD COLUMN itinerary_id TEXT NOT NULL REFERENCES itinerary(id);