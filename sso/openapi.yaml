info:
  version: 1.0.0
  title: IT Academy SSO Service
  description: This is an SSO service that is used accross all ITA services.
openapi: 3.0.0
components:
  schemas:
    EmailError:
      type: object
      properties:
        message:
          type: string
          example: email already exists
      required:
        - message
    InputError:
      type: object
      properties:
        message:
          type: string
          example: Input is not a string
      required:
        - message
    MissingTokenError:
      type: object
      properties:
        message:
          type: string
          example: Missing token
      required:
        - message
    InvalidTokenError:
      type: object
      properties:
        message:
          type: string
          example: Token is not valid
      required:
        - message
    ForbiddenError:
      type: object
      properties:
        message:
          type: string
          example: Forbidden
      required:
        - message
    MissingUserError:
      type: object
      properties:
        message:
          type: string
          example: User not found
      required:
        - message
    ValidationError:
      type: object
      properties:
        message:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: invalid_string
              message:
                type: string
                example: Invalid
              validation:
                type: string
                example: regex
              expected:
                type: string
                example: string
              received:
                type: string
                example: undefined
            required:
              - code
              - message
      required:
        - message
  parameters: {}
paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth
      description: Takes a DNI and a password and returns a session cookie
      summary: Logs in a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dni:
                  type: string
                password:
                  type: string
                  minLength: 8
              required:
                - dni
                - password
      responses:
        "200":
          description: The user has been authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  authToken:
                    type: string
                    minLength: 1
                  refreshToken:
                    type: string
                    minLength: 1
                required:
                  - authToken
                  - refreshToken
        "400":
          description: Zod validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingUserError"
        "422":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid password
                required:
                  - message
  /api/v1/auth/register:
    post:
      tags:
        - auth
      description: Takes a DNI, email and a password and registers a new user in the
        database. No object is returned.
      summary: Register a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dni:
                  type: string
                email:
                  type: string
                  minLength: 1
                  format: email
                  example: user@example.cat
                password:
                  type: string
                  minLength: 8
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]*$
                confirmPassword:
                  type: string
                  minLength: 8
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]*$
              required:
                - dni
                - email
                - password
                - confirmPassword
      responses:
        "204":
          description: The user has been registered.
        "400":
          description: Zod validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "500":
          description: Other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Database error
                required:
                  - message
